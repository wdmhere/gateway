server:
  port: 3299
  tomcat:
    uri-encoding: UTF-8

spring:
  application:
    name: jweb-eautoopen-gateway
  profiles:
    active: ${cfg.env}
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true   #开启基于注册中心的路由表。gateway可以通过开启以下配置来打开根据服务的serviceId来匹配路由
      default-filters:
      routes:    #路由配置：断言
        - id: open-platform
          uri: lb://JWEB-EAUTOOPEN    #uri: lb://JWEB-EAUTOOPEN  eurake路由ID  ； uri: http://localhost:3200  直接地址
          predicates:  # 路由规则，如失败则返回404
            - Path=/platform/open/**  #拦截条件
            - Method=GET    #限定请求类型
          filters:
            - PreserveHostHeader  #送原始host header
            - PrefixPath=/open/template    #将地址拼接到uri最前面
            - name: Hystrix    # 熔断降级配置
              args:
                name: fallback    #hystrixcommond会找到此name
                fallbackUri: forward:/normalfallback   # forward: 后面就是降级地址


#注册中心
eureka:
  instance:
    prefer-ip-address: true
  client:
    service-url:
      defaultZone: http://${eureka.instance.hostname}:${eureka.server.port}/eureka/


# hystrix 信号量隔离，3秒后自动超时
hystrix:
  command:
    fallback:   #定制断路时间
      execution:
        isolation:
          strategy: SEMAPHORE
          thread:
            timeoutInMilliseconds: 10000
    defualt:   #默认断路时间
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 30000
  shareSecurityContext: true